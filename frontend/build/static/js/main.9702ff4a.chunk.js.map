{"version":3,"sources":["constants/universityConstants.js","store.js","reducers/universityReducers.js","components/FilterBox.js","actions/universityActions.js","components/UniversityCard.js","components/Message.js","components/Loader.js","components/UniversityList.js","components/SearchBox.js","components/Paginate.js","screens/HomeScreen.js","components/FormContainer.js","screens/CreateScreen.js","components/Header.js","screens/UpdateScreen.js","App.js","reportWebVitals.js","index.js"],"names":["UNIVERSITY_LIST_REQUEST","UNIVERSITY_LIST_SUCCESS","UNIVERSITY_LIST_FAIL","UNIVERSITY_SEARCH_REQUEST","UNIVERSITY_SEARCH_SUCCESS","UNIVERSITY_SEARCH_FAIL","UNIVERSITY_FILTER_REQUEST","UNIVERSITY_FILTER_SUCCESS","UNIVERSITY_FILTER_FAIL","UNIVERSITY_CREATE_REQUEST","UNIVERSITY_CREATE_SUCCESS","UNIVERSITY_CREATE_FAIL","UNIVERSITY_CREATE_RESET","UNIVERSITY_DETAILS_REQUEST","UNIVERSITY_DETAILS_SUCCESS","UNIVERSITY_DETAILS_FAIL","UNIVERSITY_UPDATE_REQUEST","UNIVERSITY_UPDATE_SUCCESS","UNIVERSITY_UPDATE_FAIL","UNIVERSITY_UPDATE_RESET","UNIVERSITY_DELETE_REQUEST","UNIVERSITY_DELETE_SUCCESS","UNIVERSITY_DELETE_FAIL","reducer","combineReducers","universityList","state","universities","action","type","loading","payload","data","start","limit","previous","next","pages","error","universitySearch","universityFilter","universityCreate","success","university","universityDelete","universityDetails","universityUpdate","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","FilterBox","onChange","countryCode","filterSubmitHandler","Form","onSubmit","Group","controlId","Label","Control","as","value","label","map","code","Button","variant","className","listUniversities","dispatch","getState","a","axios","get","response","message","UniversityCard","useDispatch","deleteUniversityHandler","id","window","confirm","delete","deleteUniversity","src","img_url","alt","name","target","rel","href","web_page","alpha_two_code","country","description","to","onClick","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","UniversityList","searchLoading","filterLoading","searchError","filterError","length","index","SearchBox","searchSubmitHandler","keyword","class","placeholder","Paginate","paginatePreviousPage","paginateNextPage","useState","currentpage","setCurrentpage","Pagination","Prev","disabled","Next","HomeScreen","setKeyword","setCountryCode","useSelector","loadingDelete","errorDelete","successDelete","alert","useEffect","Row","Col","md","e","preventDefault","searchUniversities","toLowerCase","filterUniversities","url","console","log","FormContainer","Container","xs","CreateScreen","history","setName","domain","setDomain","webpage","setWebpage","alphaTwoCode","setAlphaTwoCode","setCountry","imgUrl","setImgUrl","setDescription","setMessage","push","config","headers","post","createUniversity","toUpperCase","Header","data-toggle","data-target","UpdateScreen","match","universityId","params","loadingUpdate","errorUpdate","successUpdate","scrollTo","put","updateUniversity","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAAaA,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBAEzBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBAEzBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBACzBC,EAA0B,0BAE1BC,EAA6B,6BAC7BC,EAA6B,6BAC7BC,EAA0B,0BAE1BC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBACzBC,EAA0B,0BAE1BC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBCrBhCC,EAAUC,0BAAgB,CAC5BC,eCPiC,WAA2C,IAA1CC,EAAyC,uDAAjC,CAAEC,aAAc,IAAMC,EAAW,uCAC3E,OAAQA,EAAOC,MACX,KAAK7B,EACD,MAAO,CAAE8B,SAAS,GACtB,KAAK7B,EACD,MAAO,CAAE6B,SAAS,EAAOH,aAAcC,EAAOG,QAAQC,KAAMC,MAAOL,EAAOG,QAAQE,MAAOC,MAAON,EAAOG,QAAQG,MAAOC,SAAUP,EAAOG,QAAQI,SAAUC,KAAMR,EAAOG,QAAQK,KAAMC,MAAOT,EAAOG,QAAQM,OAC9M,KAAKnC,EACD,MAAO,CAAE4B,SAAS,EAAOQ,MAAOV,EAAOG,SAG3C,QACI,OAAOL,IDHfa,iBCOmC,WAAyB,IAAxBb,EAAuB,uDAAf,GAAIE,EAAW,uCAC3D,OAAQA,EAAOC,MACX,KAAK1B,EACD,MAAO,CAAE2B,SAAS,GACtB,KAAK1B,EACD,MAAO,CACH0B,SAAS,GAEjB,KAAKzB,EACD,MAAO,CAAEyB,SAAS,EAAOQ,MAAOV,EAAOG,SAC3C,QACI,OAAOL,IDjBfc,iBCqBmC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCAC3D,OAAQA,EAAOC,MACX,KAAKvB,EACD,MAAO,CAAEwB,SAAS,GACtB,KAAKvB,EACD,MAAO,CACHuB,SAAS,GAEjB,KAAKtB,EACD,MAAO,CAAEsB,SAAS,EAAOQ,MAAOV,EAAOG,SAC3C,QACI,OAAOL,ID/Bfe,iBCmCmC,WAAyB,IAAxBf,EAAuB,uDAAf,GAAIE,EAAW,uCAC3D,OAAQA,EAAOC,MACX,KAAKpB,EACD,MAAO,CAAEqB,SAAS,GACtB,KAAKpB,EACD,MAAO,CAAEoB,SAAS,EAAOY,SAAS,EAAMC,WAAYf,EAAOG,SAC/D,KAAKpB,EACD,MAAO,CAAEmB,SAAS,EAAOQ,MAAOV,EAAOG,SAC3C,KAAKnB,EACD,MAAO,GACX,QACI,OAAOc,ID7CfkB,iBCmFmC,WAAyB,IAAxBlB,EAAuB,uDAAf,GAAIE,EAAW,uCAC3D,OAAQA,EAAOC,MACX,KAAKT,EACD,MAAO,CAAEU,SAAS,GACtB,KAAKT,EACD,MAAO,CAAES,SAAS,EAAOY,SAAS,GACtC,KAAKpB,EACD,MAAO,CAAEQ,SAAS,EAAOQ,MAAOV,EAAOG,SAC3C,QACI,OAAOL,ID3FfmB,kBCgDoC,WAGlC,IAFFnB,EAEC,uDAFO,CAAEiB,WAAY,IACtBf,EACC,uCACD,OAAQA,EAAOC,MACX,KAAKhB,EACD,OAAO,aAAEiB,SAAS,GAASJ,GAC/B,KAAKZ,EACD,MAAO,CACHgB,SAAS,EACTa,WAAYf,EAAOG,SAE3B,KAAKhB,EACD,MAAO,CAAEe,SAAS,EAAOQ,MAAOV,EAAOG,SAC3C,QACI,OAAOL,ID9DfoB,iBCkEmC,WAAyC,IAAxCpB,EAAuC,uDAA/B,CAAEiB,WAAY,IAAMf,EAAW,uCAC3E,OAAQA,EAAOC,MACX,KAAKb,EACD,MAAO,CAAEc,SAAS,GACtB,KAAKb,EACD,MAAO,CAAEa,SAAS,EAAOY,SAAS,EAAMC,WAAYf,EAAOG,SAC/D,KAAKb,EACD,MAAO,CAAEY,SAAS,EAAOQ,MAAOV,EAAOG,SAC3C,KAAKZ,EACD,MAAO,CAAEwB,WAAY,IACzB,QACI,OAAOjB,MDnEbqB,EAAa,CAACC,KAQLC,EANDC,sBACV3B,EAPiB,CACjBE,eAAgB,CAAEE,aAAc,KAQhCwB,8BAAoBC,kBAAe,WAAf,EAAmBL,K,6EES5BM,EApCG,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,oBAMxC,OACI,gCACI,wCACA,eAACC,EAAA,EAAD,CAAMC,SAAUF,EAAhB,UACI,eAACC,EAAA,EAAKE,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,qBACA,eAACJ,EAAA,EAAKK,QAAN,CACIC,GAAG,SACHC,MAAOT,EACPD,SAAUA,EAHd,UAKI,wBAAQW,MAAM,MAAMD,MAAM,KAfxB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACrez2CE,KAAI,SAACC,GAAD,OACf,wBAEIF,MAAK,UAAKE,GACVH,MAAK,UAAKG,IAHd,UACYA,aAQxB,cAACC,EAAA,EAAD,CAAQvC,KAAK,SAASwC,QAAQ,UAAUC,UAAU,YAAlD,sD,yCC5BHC,EAAmB,yDAAM,WAAOC,EAAUC,GAAjB,iBAAAC,EAAA,sEAE9BF,EAAS,CACL3C,KAAM7B,IAHoB,SAMP2E,IAAMC,IAAN,qBANO,gBAMtB5C,EANsB,EAMtBA,KAERwC,EAAS,CACL3C,KAAM5B,EACN8B,QAASC,IAViB,gDAa9BwC,EAAS,CACL3C,KAAM3B,EACN6B,QACI,KAAM8C,UAAY,KAAMA,SAAS7C,KAAK8C,QAChC,KAAMD,SAAS7C,KAAK8C,QACpB,KAAMA,UAlBU,yDAAN,yDCqCjBC,EAnCQ,SAAC,GAAqB,IAAnBpC,EAAkB,EAAlBA,WAEhB6B,EAAWQ,cAEXC,EAA0B,SAACC,GACzBC,OAAOC,QAAQ,iBAEfZ,EDkNoB,SAACU,GAAD,8CAAQ,WAAOV,GAAP,SAAAE,EAAA,sEAEhCF,EAAS,CACL3C,KAAMT,IAHsB,SAM1BuD,IAAMU,OAAN,4BAAkCH,IANR,OAQhCV,EAAS,CACL3C,KAAMR,IATsB,gDAYhCmD,EAAS,CACL3C,KAAMP,EACNS,QACI,KAAM8C,UAAY,KAAMA,SAAS7C,KAAK8C,QAChC,KAAMD,SAAS7C,KAAK8C,QACpB,KAAMA,UAjBY,yDAAR,sDClNXQ,CAAiBJ,KAGlC,OACI,qBAAKZ,UAAU,YAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKiB,IAAK5C,EAAW6C,QAASlB,UAAU,6BAA6BmB,IAAK9C,EAAW+C,SAEzF,qBAAKpB,UAAU,8BAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SACI,oBAAGqB,OAAO,SAASC,IAAI,aAAaC,KAAMlD,EAAWmD,SAArD,UAAgEnD,EAAW+C,KACvE,sBAAMpB,UAAU,iDAAhB,SAAkE3B,EAAWoD,sBAErF,sBAAMzB,UAAU,0CAAhB,SAA2D3B,EAAWqD,UACtE,mBAAG1B,UAAU,YAAb,SACK3B,EAAWsD,mBAIxB,cAAC,IAAD,CAAMC,GAAE,kBAAavD,EAAWuC,IAAMZ,UAAU,4BAAhD,kBACA,wBAAQA,UAAU,2BAA2B6B,QAAS,WAAQlB,EAAwBtC,EAAWuC,KAAjG,0B,SC/BVkB,GAAU,SAAC,GAA2B,IAAzB/B,EAAwB,EAAxBA,QAASgC,EAAe,EAAfA,SAC1B,OAAO,cAACC,GAAA,EAAD,CAAOjC,QAASA,EAAhB,SAA0BgC,KAGnCD,GAAQG,aAAe,CACrBlC,QAAS,QAGI+B,U,SCYAI,GApBA,WACb,OACE,cAACC,GAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLC,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,SAPb,SAUE,sBAAM1C,UAAU,UAAhB,2BCeS2C,GArBQ,SAAC,GAA8F,IAA5FnF,EAA2F,EAA3FA,QAASoF,EAAkF,EAAlFA,cAAeC,EAAmE,EAAnEA,cAAe7E,EAAoD,EAApDA,MAAO8E,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,YAAa1F,EAAmB,EAAnBA,aAC9F,OACI,mCACKG,GAAWoF,GAAiBC,EACzB,cAAC,GAAD,IACA7E,GAAS8E,GAAeC,EACxB,cAAC,GAAD,CAAShD,QAAQ,SAAjB,SAA2B/B,GAAS8E,GAAeC,IAC3B,IAAxB1F,EAAa2F,OAAgB,cAAC,GAAD,mCAC7B3F,EAAauC,KAAI,SAACvB,EAAY4E,GAAb,OACb,mCACI,cAAC,EAAD,CAA4B5E,WAAYA,GAAnB4E,WCK9BC,GArBG,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,oBAAqBnE,EAAwB,EAAxBA,SAAUoE,EAAc,EAAdA,QAChD,OACI,sBAAKC,MAAM,sBAAX,UACI,oBAAIA,MAAM,OAAV,oBACA,eAAClE,EAAA,EAAD,CAAMC,SAAU+D,EAAhB,UACI,cAAChE,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL6D,KAAK,IACLpC,SAAUA,EACVsE,YAAY,+BACZ5D,MAAO0D,IAEX,uBACA,cAACtD,EAAA,EAAD,CAAQvC,KAAK,SAASwC,QAAQ,UAAUC,UAAU,YAAlD,2B,SCWDuD,GAxBE,SAAC,GAA4F,IAA1FxF,EAAyF,EAAzFA,MAAOJ,EAAkF,EAAlFA,MAAOE,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,KAAM0F,EAA2D,EAA3DA,qBAAsBC,EAAqC,EAArCA,iBACpE,GADyG,EAAnBL,QAChDM,mBAAS/F,IAA/C,mBAAOgG,EAAP,KAAoBC,EAApB,KAGA,OAAO7F,EAAQ,GACX,eAAC8F,GAAA,EAAD,WACKhG,EAAY,cAACgG,GAAA,EAAWC,KAAZ,CAAiBjC,QAAS,WACnC2B,IACAI,EAAeD,EAAc,MACvB,cAACE,GAAA,EAAWC,KAAZ,CAAiBC,UAAQ,IAKlCjG,EAAO,cAAC+F,GAAA,EAAWG,KAAZ,CACJnC,QAAS,WACL4B,IACAG,EAAeD,EAAc,MAEhC,cAACE,GAAA,EAAWG,KAAZ,CAAiBD,UAAQ,QCoE3BE,GAjFI,WACf,MAA8BP,mBAAS,IAAvC,mBAAON,EAAP,KAAgBc,EAAhB,KACA,EAAsCR,mBAAS,IAA/C,mBAAOzE,EAAP,KAAoBkF,EAApB,KAGMjE,EAAWQ,cAEXvD,EAAiBiH,aAAY,SAAChH,GAAD,OAAWA,EAAMD,kBAC5CK,EAAsEL,EAAtEK,QAASQ,EAA6Db,EAA7Da,MAAOL,EAAsDR,EAAtDQ,MAAOC,EAA+CT,EAA/CS,MAAOG,EAAwCZ,EAAxCY,MAAOF,EAAiCV,EAAjCU,SAAUC,EAAuBX,EAAvBW,KAAMT,EAAiBF,EAAjBE,aAEvDY,EAAmBmG,aAAY,SAAChH,GAAD,OAAWA,EAAMa,oBACrC2E,EAAsC3E,EAA/CT,QAA+BsF,EAAgB7E,EAAvBD,MAE1BE,EAAmBkG,aAAY,SAAChH,GAAD,OAAWA,EAAMc,oBACrC2E,EAAsC3E,EAA/CV,QAA+BuF,EAAgB7E,EAAvBF,MAE1BM,EAAmB8F,aAAY,SAAChH,GAAD,OAAWA,EAAMkB,oBACrC+F,EAEe/F,EAFxBd,QACG8G,EACqBhG,EAD5BN,MACSuG,EAAmBjG,EAA5BF,QAEAkG,GACAE,MAAM,0CAIVC,qBAAU,WACNvE,EAASD,OACV,CAACC,EAAUqE,IA6Bd,OACI,qBAAKvE,UAAU,OAAf,SACI,eAAC0E,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,cAAC,GAAD,CAAW5F,SAAU,SAAC6F,GAAD,OAAOX,EAAWW,EAAExD,OAAO3B,QAAQyD,oBA/B5C,SAAC0B,GACzBA,EAAEC,iBAEE5E,EADY,KAAZkD,EACSnD,IPhBa,SAACmD,EAASzF,EAAOC,GAAjB,8CAA2B,WACzDsC,GADyD,iBAAAE,EAAA,sEAIrDF,EAAS,CAAE3C,KAAM1B,IAJoC,SAM9BwE,IAAMC,IAAN,mCACS8C,EADT,kBAC0BzF,EAD1B,kBACyCC,IAPX,gBAM7CF,EAN6C,EAM7CA,KAIRwC,EAAS,CACL3C,KAAMzB,IAGVoE,EAAS,CACL3C,KAAM5B,EACN8B,QAASC,IAhBwC,kDAmBrDwC,EAAS,CACL3C,KAAMxB,EACN0B,QACI,KAAM8C,UAAY,KAAMA,SAAS7C,KAAK8C,QAChC,KAAMD,SAAS7C,KAAK8C,QACpB,KAAMA,UAxBiC,0DAA3B,sDOkBbuE,CAAmB3B,EAAQ4B,cAAerH,EAAOC,KA0BgDwF,QAASA,IAC3G,cAAC,EAAD,CAAWpE,SAAU,SAAC6F,GAAD,OAAOV,EAAeU,EAAExD,OAAO3B,QAAQR,oBAxBhD,SAAC2F,GACzBA,EAAEC,iBAEE5E,EADgB,KAAhBjB,EACSgB,IPKa,eAACmD,EAAD,uDAAW,GAAX,8CAAmC,WACjElD,GADiE,iBAAAE,EAAA,sEAI7DF,EAAS,CAAE3C,KAAMvB,IAJ4C,SAMtCqE,IAAMC,IAAN,0CACgB8C,IAPsB,gBAMrD1F,EANqD,EAMrDA,KAIRwC,EAAS,CACL3C,KAAMtB,IAGViE,EAAS,CACL3C,KAAM5B,EACN8B,QAASC,IAhBgD,kDAmB7DwC,EAAS,CACL3C,KAAMrB,EACNuB,QACI,KAAM8C,UAAY,KAAMA,SAAS7C,KAAK8C,QAChC,KAAMD,SAAS7C,KAAK8C,QACpB,KAAMA,UAxByC,0DAAnC,sDOHbyE,CAAmBhG,KAmBkFA,YAAaA,IACnH,qBAAKe,UAAU,OAAf,SACI,cAACF,EAAA,EAAD,CAAQE,UAAU,YAAY6B,QAAS,WACnC3B,EAASD,KACTiE,EAAW,IACXC,EAAe,KAHnB,gCAQR,eAACQ,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,cAAC,GAAD,CAAgBpH,QAASA,EAASoF,cAAeA,EAAe5E,MAAOA,EAAOX,aAAcA,EAAcyF,YAAaA,EAAaD,cAAeA,EAAeE,YAAaA,EAAapF,MAAOA,EAAOI,MAAOA,EAAOsG,cAAeA,EAAeC,YAAaA,IACnQ,cAAC,GAAD,CAAU3G,MAAOA,EAAOI,MAAOA,EAAOF,SAAUA,EAAUC,KAAMA,EAAM0F,qBA3BzD,WP6BL,IAAC0B,EO5BrBhF,GP4BqBgF,EO5BCrH,EP4BF,uCAAS,WACjCqC,GADiC,iBAAAE,EAAA,sEAI7BF,EAAS,CAAE3C,KAAM7B,IAEjByJ,QAAQC,IAAIF,GANiB,SAON7E,IAAMC,IAAN,UAAa4E,IAPP,gBAOrBxH,EAPqB,EAOrBA,KAMRwC,EAAS,CACL3C,KAAM5B,EACN8B,QAASC,IAfgB,kDAkB7BwC,EAAS,CACL3C,KAAM3B,EACN6B,QACI,KAAM8C,UAAY,KAAMA,SAAS7C,KAAK8C,QAChC,KAAMD,SAAS7C,KAAK8C,QACpB,KAAMA,UAvBS,0DAAT,yDOF0GiD,iBAvBzG,WPqDL,IAACyB,EOpDjBhF,GPoDiBgF,EOpDCpH,EPoDF,uCAAS,WAC7BoC,GAD6B,iBAAAE,EAAA,sEAIzBF,EAAS,CAAE3C,KAAM7B,IACjByJ,QAAQC,IAAIF,GALa,SAOF7E,IAAMC,IAAN,UAAa4E,IAPX,gBAOjBxH,EAPiB,EAOjBA,KAMRwC,EAAS,CACL3C,KAAM5B,EACN8B,QAASC,IAfY,kDAkBzBwC,EAAS,CACL3C,KAAM3B,EACN6B,QACI,KAAM8C,UAAY,KAAMA,SAAS7C,KAAK8C,QAChC,KAAMD,SAAS7C,KAAK8C,QACpB,KAAMA,UAvBK,0DAAT,oEQlGT6E,GAZO,SAAC,GAAkB,IAAhBtD,EAAe,EAAfA,SACvB,OACE,cAACuD,EAAA,EAAD,UACE,cAACZ,EAAA,EAAD,CAAK1E,UAAU,4BAAf,SACE,cAAC2E,EAAA,EAAD,CAAKY,GAAI,GAAIX,GAAI,EAAjB,SACG7C,SC0HIyD,GAxHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,EAAwB/B,mBAAS,IAAjC,mBAAOtC,EAAP,KAAasE,EAAb,KACA,EAA4BhC,mBAAS,IAArC,mBAAOiC,EAAP,KAAeC,EAAf,KACA,EAA8BlC,mBAAS,IAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAAwCpC,mBAAS,IAAjD,mBAAOqC,EAAP,KAAqBC,EAArB,KACA,EAA8BtC,mBAAS,IAAvC,mBAAOhC,EAAP,KAAgBuE,EAAhB,KACA,EAA4BvC,mBAAS,IAArC,mBAAOwC,EAAP,KAAeC,EAAf,KACA,EAAsCzC,mBAAS,IAA/C,mBAAO/B,EAAP,KAAoByE,EAApB,KACA,EAA8B1C,mBAAS,MAAvC,mBAAOlD,EAAP,KAAgB6F,EAAhB,KAEMnG,EAAWQ,cAEXvC,EAAmBiG,aAAY,SAAChH,GAAD,OAAWA,EAAMe,oBAC9CX,EAA4BW,EAA5BX,QAASQ,EAAmBG,EAAnBH,MAAOI,EAAYD,EAAZC,QAExBqG,qBAAU,WACFrG,IACA8B,EAAS,CAAE3C,KAAMjB,IACjBmJ,EAAQa,KAAK,QAElB,CAACpG,EAAUuF,EAASrH,IAcvB,OACI,eAAC,GAAD,WACI,qDACA,cAAC,IAAD,CAAM4B,UAAU,qBAAqB4B,GAAG,IAAxC,qBAGCpE,GAAW,cAAC,GAAD,IACXgD,GAAW,cAAC,GAAD,CAAST,QAAQ,SAAjB,SAA2BS,IACtCxC,GAAS,cAAC,GAAD,CAAS+B,QAAQ,SAAjB,SAA2B/B,IAErC,eAACmB,EAAA,EAAD,CAAMC,SAtBQ,SAACyF,GACnBA,EAAEC,iBACW,KAAT1D,GAA0B,KAAXuE,GAA6B,KAAZE,GAAmC,KAAjBE,GAAmC,KAAZrE,GAA6B,KAAXwE,GAAiC,KAAhBvE,EAC5G0E,EAAW,sBAENN,EAAa/C,OAAS,GAAK+C,EAAa/C,OAAS,EACtDqD,EAAW,uCAEXnG,ETqGoB,SAACkB,EAAMuE,EAAQE,EAASE,EAAcrE,EAASwE,EAAQvE,GAAvD,8CAAuE,WAAOzB,GAAP,mBAAAE,EAAA,sEAE/FF,EAAS,CACL3C,KAAMpB,IAGJoK,EAAS,CACXC,QAAS,CACL,eAAgB,qBARuE,SAYxEnG,IAAMoG,KAAN,oBAAgC,CAAErF,OAAMuE,SAAQnE,SAAUqE,EAASpE,eAAgBsE,EAAcrE,UAASR,QAASgF,EAAQvE,eAAe4E,GAZlE,gBAYvF7I,EAZuF,EAYvFA,KAERwC,EAAS,CACL3C,KAAMnB,EACNqB,QAASC,IAhBkF,kDAmB/FwC,EAAS,CACL3C,KAAMlB,EACNoB,QACI,KAAM8C,UAAY,KAAMA,SAAS7C,KAAK8C,QAChC,KAAMD,SAAS7C,KAAK8C,QACpB,KAAMA,UAxB2E,0DAAvE,sDSrGXkG,CAAiBtF,EAAMuE,EAAQE,EAASE,EAAaY,cAAejF,EAASwE,EAAQvE,KAc9F,UACI,eAACxC,EAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,wBACZ5D,MAAO0B,EACPpC,SAAU,SAAC6F,GAAD,OAAOa,EAAQb,EAAExD,OAAO3B,aAG1C,eAACP,EAAA,EAAKuF,IAAN,WACI,eAACvF,EAAA,EAAKE,MAAN,CAAYI,GAAIkF,IAAKC,GAAG,IAAItF,UAAU,SAAtC,UACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,0BACZ5D,MAAOiG,EACP3G,SAAU,SAAC6F,GAAD,OAAOe,EAAUf,EAAExD,OAAO3B,aAG5C,eAACP,EAAA,EAAKE,MAAN,CAAYI,GAAIkF,IAAKC,GAAG,IAAItF,UAAU,UAAtC,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,2BACZ5D,MAAOmG,EACP7G,SAAU,SAAC6F,GAAD,OAAOiB,EAAWjB,EAAExD,OAAO3B,gBAIjD,eAACP,EAAA,EAAKuF,IAAN,WACI,eAACvF,EAAA,EAAKE,MAAN,CAAYI,GAAIkF,IAAKC,GAAG,IAAItF,UAAU,eAAtC,UACI,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,gCACZ5D,MAAOqG,EACP/G,SAAU,SAAC6F,GAAD,OAAOmB,EAAgBnB,EAAExD,OAAO3B,aAGlD,eAACP,EAAA,EAAKE,MAAN,CAAYI,GAAIkF,IAAKC,GAAG,IAAItF,UAAU,UAAtC,UACI,cAACH,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,2BACZ5D,MAAOgC,EACP1C,SAAU,SAAC6F,GAAD,OAAOoB,EAAWpB,EAAExD,OAAO3B,gBAIjD,eAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,kBACZ5D,MAAOwG,EACPlH,SAAU,SAAC6F,GAAD,OAAOsB,EAAUtB,EAAExD,OAAO3B,aAG5C,eAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,qBACZ5D,MAAOiC,EACP3C,SAAU,SAAC6F,GAAD,OAAOuB,EAAevB,EAAExD,OAAO3B,aAGjD,wBAAQnC,KAAK,SAASyC,UAAU,kBAAhC,2BClGD4G,GArBA,WACX,OACI,qBAAK5G,UAAU,iDAAf,SACI,sBAAKA,UAAU,YAAf,UACI,eAAC,IAAD,CAAMA,UAAU,eAAe4B,GAAG,IAAlC,UAAsC,mBAAG5B,UAAU,uBAAnD,YACA,wBAAQA,UAAU,iBAAiBzC,KAAK,SAASsJ,cAAY,WAAWC,cAAY,0BAApF,SACI,sBAAM9G,UAAU,0BAGpB,qBAAKA,UAAU,2BAA2BY,GAAG,yBAA7C,SACI,oBAAIZ,UAAU,qBAAd,SACI,oBAAIA,UAAU,sBAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAW4B,GAAG,UAA9B,2CCgJbmF,GArJM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOvB,EAAc,EAAdA,QACrBwB,EAAeD,EAAME,OAAOtG,GAElC,EAAwB8C,mBAAS,IAAjC,mBAAOtC,EAAP,KAAasE,EAAb,KACA,EAA4BhC,mBAAS,IAArC,mBAAOiC,EAAP,KAAeC,EAAf,KACA,EAA8BlC,mBAAS,IAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAAwCpC,mBAAS,IAAjD,mBAAOqC,EAAP,KAAqBC,EAArB,KACA,EAA8BtC,mBAAS,IAAvC,mBAAOhC,EAAP,KAAgBuE,EAAhB,KACA,EAA4BvC,mBAAS,IAArC,mBAAOwC,EAAP,KAAeC,EAAf,KACA,EAAsCzC,mBAAS,IAA/C,mBAAO/B,EAAP,KAAoByE,EAApB,KACA,EAA8B1C,mBAAS,MAAvC,mBAAOlD,EAAP,KAAgB6F,EAAhB,KAEMnG,EAAWQ,cAEXnC,GAAoB6F,aAAY,SAAChH,GAAD,OAAWA,EAAMmB,qBAC/Cf,GAA+Be,GAA/Bf,QAASQ,GAAsBO,GAAtBP,MAAOK,GAAeE,GAAfF,WAElBG,GAAmB4F,aAAY,SAAChH,GAAD,OAAWA,EAAMoB,oBAEzC2I,GAGT3I,GAHAhB,QACO4J,GAEP5I,GAFAR,MACSqJ,GACT7I,GADAJ,QAKJqG,qBAAU,WXmKsB,IAAC7D,EWlK7BC,OAAOyG,SAAS,EAAG,GACfD,KACAnH,EAAS,CAAE3C,KAAMV,IACjB4I,EAAQa,KAAK,MAEZjI,GAAW+C,MAAQ/C,GAAWuC,KAAOqG,IACtC/G,GX4JyBU,EW5JKqG,EX4JN,uCAAQ,WAAO/G,GAAP,iBAAAE,EAAA,sEAEpCF,EAAS,CACL3C,KAAMhB,IAH0B,SAMb8D,IAAMC,IAAN,4BAA+BM,IANlB,gBAM5BlD,EAN4B,EAM5BA,KAERwC,EAAS,CACL3C,KAAMf,EACNiB,QAASC,IAVuB,gDAapCwC,EAAS,CACL3C,KAAMd,EACNgB,QACI,KAAM8C,UAAY,KAAMA,SAAS7C,KAAK8C,QAChC,KAAMD,SAAS7C,KAAK8C,QACpB,KAAMA,UAlBgB,yDAAR,wDW3JxBkF,EAAQrH,GAAW+C,MACnBwE,EAAUvH,GAAWsH,QACrBG,EAAWzH,GAAWmD,UACtBwE,EAAgB3H,GAAWoD,gBAC3BwE,EAAW5H,GAAWqD,SACtByE,EAAU9H,GAAW6C,SACrBkF,EAAe/H,GAAWsD,gBAE/B,CAACzB,EAAUuF,EAAS4B,GAAeJ,EAAc5I,GAAWuC,GAAIvC,GAAWmD,SAAUnD,GAAW+C,KAAM/C,GAAWsH,OAAQtH,GAAWoD,eAAgBpD,GAAWqD,QAASrD,GAAW6C,QAAS7C,GAAWsD,cAc1M,OACI,mCACMnE,GAAU,cAAC,GAAD,IACR,eAAC,GAAD,WACI,qDACA,cAAC,IAAD,CAAMwC,UAAU,qBAAqB4B,GAAG,IAAxC,qBAICuF,IAAiB,cAAC,GAAD,IACjBC,IAAe,cAAC,GAAD,CAASrH,QAAQ,SAAjB,SAA2BqH,KAC1C5G,GAAW,cAAC,GAAD,CAAST,QAAQ,SAAjB,SAA2BS,IACtCxC,IAAS,cAAC,GAAD,CAAS+B,QAAQ,SAAjB,SAA2B/B,KAErC,eAACmB,EAAA,EAAD,CAAMC,SA1BA,SAACyF,GACnBA,EAAEC,iBACW,KAAT1D,GAA0B,KAAXuE,GAA6B,KAAZE,GAAmC,KAAjBE,GAAmC,KAAZrE,GAA6B,KAAXwE,GAAiC,KAAhBvE,EAC5G0E,EAAW,sBAENN,EAAa/C,OAAS,GAAK+C,EAAa/C,OAAS,EACtDqD,EAAW,uCAEXnG,EX4GoB,SAACU,EAAIQ,EAAMuE,EAAQE,EAASE,EAAcrE,EAASwE,EAAQvE,GAA3D,8CAA2E,WAAOzB,GAAP,mBAAAE,EAAA,sEAEnGF,EAAS,CACL3C,KAAMb,IAGJ6J,EAAS,CACXC,QAAS,CACL,eAAgB,qBAR2E,SAY5EnG,IAAMkH,IAAN,4BAA+B3G,GAAM,CAAEQ,OAAMuE,SAAQnE,SAAUqE,EAASpE,eAAgBsE,EAAcrE,UAASR,QAASgF,EAAQvE,eAAe4E,GAZnE,gBAY3F7I,EAZ2F,EAY3FA,KAERwC,EAAS,CACL3C,KAAMZ,EACNc,QAASC,IAhBsF,kDAmBnGwC,EAAS,CACL3C,KAAMX,EACNa,QACI,KAAM8C,UAAY,KAAMA,SAAS7C,KAAK8C,QAChC,KAAMD,SAAS7C,KAAK8C,QACpB,KAAMA,UAxB+E,0DAA3E,sDW5GXgH,CAAiBnJ,GAAWuC,GAAIQ,EAAMuE,EAAQE,EAASE,EAAaY,cAAejF,EAASwE,EAAQvE,KAkBrG,UACI,eAACxC,EAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,wBACZ5D,MAAO0B,EACPpC,SAAU,SAAC6F,GAAD,OAAOa,EAAQb,EAAExD,OAAO3B,aAG1C,eAACP,EAAA,EAAKuF,IAAN,WACI,eAACvF,EAAA,EAAKE,MAAN,CAAYI,GAAIkF,IAAKC,GAAG,IAAItF,UAAU,SAAtC,UACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,0BACZ5D,MAAOiG,EACP3G,SAAU,SAAC6F,GAAD,OAAOe,EAAUf,EAAExD,OAAO3B,aAG5C,eAACP,EAAA,EAAKE,MAAN,CAAYI,GAAIkF,IAAKC,GAAG,IAAItF,UAAU,UAAtC,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,2BACZ5D,MAAOmG,EACP7G,SAAU,SAAC6F,GAAD,OAAOiB,EAAWjB,EAAExD,OAAO3B,gBAIjD,eAACP,EAAA,EAAKuF,IAAN,WACI,eAACvF,EAAA,EAAKE,MAAN,CAAYI,GAAIkF,IAAKC,GAAG,IAAItF,UAAU,eAAtC,UACI,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,gCACZ5D,MAAOqG,EACP/G,SAAU,SAAC6F,GAAD,OAAOmB,EAAgBnB,EAAExD,OAAO3B,aAGlD,eAACP,EAAA,EAAKE,MAAN,CAAYI,GAAIkF,IAAKC,GAAG,IAAItF,UAAU,UAAtC,UACI,cAACH,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,2BACZ5D,MAAOgC,EACP1C,SAAU,SAAC6F,GAAD,OAAOoB,EAAWpB,EAAExD,OAAO3B,gBAIjD,eAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,kBACZ5D,MAAOwG,EACPlH,SAAU,SAAC6F,GAAD,OAAOsB,EAAUtB,EAAExD,OAAO3B,aAG5C,eAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CACIjC,KAAK,OACL+F,YAAY,qBACZ5D,MAAOiC,EACP3C,SAAU,SAAC6F,GAAD,OAAOuB,EAAevB,EAAExD,OAAO3B,aAGjD,wBAAQnC,KAAK,SAASyC,UAAU,kBAAhC,6BC1HTyH,OAlBf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAACnC,EAAA,EAAD,WAGE,cAAC,IAAD,CAAOoC,KAAK,cAAcC,UAAWZ,KACrC,cAAC,IAAD,CAAOW,KAAK,UAAUC,UAAWnC,GAAcoC,OAAK,IACpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,UAAW1D,GAAY2D,OAAK,aCNvCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAD,CAAU5J,MAAOA,EAAjB,SACE,cAAC,GAAD,MAEF6J,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.9702ff4a.chunk.js","sourcesContent":["export const UNIVERSITY_LIST_REQUEST = \"UNIVERSITY_LIST_REQUEST\";\r\nexport const UNIVERSITY_LIST_SUCCESS = \"UNIVERSITY_LIST_SUCCESS\";\r\nexport const UNIVERSITY_LIST_FAIL = \"UNIVERSITY_LIST_FAIL\";\r\nexport const UNIVERSITY_LIST_RESET = \"UNIVERSITY_LIST_RESET\";\r\n\r\nexport const UNIVERSITY_SEARCH_REQUEST = \"UNIVERSITY_SEARCH_REQUEST\";\r\nexport const UNIVERSITY_SEARCH_SUCCESS = \"UNIVERSITY_SEARCH_SUCCESS\";\r\nexport const UNIVERSITY_SEARCH_FAIL = \"UNIVERSITY_SEARCH_FAIL\";\r\n\r\nexport const UNIVERSITY_FILTER_REQUEST = \"UNIVERSITY_FILTER_REQUEST\";\r\nexport const UNIVERSITY_FILTER_SUCCESS = \"UNIVERSITY_FILTER_SUCCESS\";\r\nexport const UNIVERSITY_FILTER_FAIL = \"UNIVERSITY_FILTER_FAIL\";\r\n\r\nexport const UNIVERSITY_CREATE_REQUEST = \"UNIVERSITY_CREATE_REQUEST\";\r\nexport const UNIVERSITY_CREATE_SUCCESS = \"UNIVERSITY_CREATE_SUCCESS\";\r\nexport const UNIVERSITY_CREATE_FAIL = \"UNIVERSITY_CREATE_FAIL\";\r\nexport const UNIVERSITY_CREATE_RESET = \"UNIVERSITY_CREATE_RESET\";\r\n\r\nexport const UNIVERSITY_DETAILS_REQUEST = \"UNIVERSITY_DETAILS_REQUEST\";\r\nexport const UNIVERSITY_DETAILS_SUCCESS = \"UNIVERSITY_DETAILS_SUCCESS\";\r\nexport const UNIVERSITY_DETAILS_FAIL = \"UNIVERSITY_DETAILS_FAIL\";\r\n\r\nexport const UNIVERSITY_UPDATE_REQUEST = \"UNIVERSITY_UPDATE_REQUEST\";\r\nexport const UNIVERSITY_UPDATE_SUCCESS = \"UNIVERSITY_UPDATE_SUCCESS\";\r\nexport const UNIVERSITY_UPDATE_FAIL = \"UNIVERSITY_UPDATE_FAIL\";\r\nexport const UNIVERSITY_UPDATE_RESET = \"UNIVERSITY_UPDATE_RESET\";\r\n\r\nexport const UNIVERSITY_DELETE_REQUEST = \"UNIVERSITY_DELETE_REQUEST\";\r\nexport const UNIVERSITY_DELETE_SUCCESS = \"UNIVERSITY_DELETE_SUCCESS\";\r\nexport const UNIVERSITY_DELETE_FAIL = \"UNIVERSITY_DELETE_FAIL\";\r\nexport const UNIVERSITY_DELETE_RESET = \"UNIVERSITY_DELETE_RESET\";","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport {\r\n    universityListReducer, universitySearchReducer, universityFilterReducer, universityCreateReducer, universityDeleteReducer, universityDetailsReducer, universityUpdateReducer\r\n} from \"./reducers/universityReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    universityList: universityListReducer,\r\n    universitySearch: universitySearchReducer,\r\n    universityFilter: universityFilterReducer,\r\n    universityCreate: universityCreateReducer,\r\n    universityDelete: universityDeleteReducer,\r\n    universityDetails: universityDetailsReducer,\r\n    universityUpdate: universityUpdateReducer,\r\n});\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    universityList: { universities: [] }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import { UNIVERSITY_LIST_REQUEST, UNIVERSITY_LIST_SUCCESS, UNIVERSITY_LIST_FAIL, UNIVERSITY_SEARCH_FAIL, UNIVERSITY_SEARCH_REQUEST, UNIVERSITY_SEARCH_SUCCESS, UNIVERSITY_FILTER_REQUEST, UNIVERSITY_FILTER_SUCCESS, UNIVERSITY_FILTER_FAIL, UNIVERSITY_CREATE_REQUEST, UNIVERSITY_CREATE_SUCCESS, UNIVERSITY_CREATE_FAIL, UNIVERSITY_DELETE_REQUEST, UNIVERSITY_DELETE_SUCCESS, UNIVERSITY_DELETE_FAIL, UNIVERSITY_CREATE_RESET, UNIVERSITY_DETAILS_REQUEST, UNIVERSITY_DETAILS_SUCCESS, UNIVERSITY_DETAILS_FAIL, UNIVERSITY_UPDATE_REQUEST, UNIVERSITY_UPDATE_SUCCESS, UNIVERSITY_UPDATE_FAIL, UNIVERSITY_UPDATE_RESET } from \"../constants/universityConstants\";\r\n\r\nexport const universityListReducer = (state = { universities: [] }, action) => {\r\n    switch (action.type) {\r\n        case UNIVERSITY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case UNIVERSITY_LIST_SUCCESS:\r\n            return { loading: false, universities: action.payload.data, start: action.payload.start, limit: action.payload.limit, previous: action.payload.previous, next: action.payload.next, pages: action.payload.pages };\r\n        case UNIVERSITY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        //   case UNIVERSITY_LIST_RESET:\r\n        //     return { UNIVERSITYs: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const universitySearchReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UNIVERSITY_SEARCH_REQUEST:\r\n            return { loading: true };\r\n        case UNIVERSITY_SEARCH_SUCCESS:\r\n            return {\r\n                loading: false,\r\n            };\r\n        case UNIVERSITY_SEARCH_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const universityFilterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UNIVERSITY_FILTER_REQUEST:\r\n            return { loading: true };\r\n        case UNIVERSITY_FILTER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n            };\r\n        case UNIVERSITY_FILTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const universityCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UNIVERSITY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case UNIVERSITY_CREATE_SUCCESS:\r\n            return { loading: false, success: true, university: action.payload };\r\n        case UNIVERSITY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case UNIVERSITY_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const universityDetailsReducer = (\r\n    state = { university: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case UNIVERSITY_DETAILS_REQUEST:\r\n            return { loading: true, ...state };\r\n        case UNIVERSITY_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                university: action.payload\r\n            };\r\n        case UNIVERSITY_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const universityUpdateReducer = (state = { university: {} }, action) => {\r\n    switch (action.type) {\r\n        case UNIVERSITY_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case UNIVERSITY_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, university: action.payload };\r\n        case UNIVERSITY_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case UNIVERSITY_UPDATE_RESET:\r\n            return { university: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const universityDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UNIVERSITY_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case UNIVERSITY_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case UNIVERSITY_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst FilterBox = ({ onChange, countryCode, filterSubmitHandler }) => {\r\n\r\n    const country_codes = ['AF', 'AX', 'AL', 'DZ', 'AS', 'AD', 'AO', 'AI', 'AQ', 'AG', 'AR', 'AM',\r\n        'AW', 'AU', 'AT', 'AZ', 'BH', 'BS', 'BD', 'BB', 'BY', 'BE', 'BZ', 'BJ', 'BM', 'BT', 'BO', 'BQ', 'BA', 'BW', 'BV', 'BR', 'IO', 'BN', 'BG', 'BF', 'BI', 'KH', 'CM', 'CA', 'CV', 'KY', 'CF', 'TD', 'CL', 'CN', 'CX', 'CC', 'CO', 'KM', 'CG', 'CD', 'CK', 'CR', 'CI', 'HR', 'CU', 'CW', 'CY', 'CZ', 'DK', 'DJ', 'DM', 'DO', 'EC', 'EG', 'SV', 'GQ', 'ER', 'EE', 'ET', 'FK', 'FO', 'FJ', 'FI', 'FR', 'GF', 'PF', 'TF', 'GA', 'GB', 'GM', 'GE', 'DE', 'GH', 'GI', 'GR', 'GL', 'GD', 'GP', 'GU', 'GT', 'GG', 'GN', 'GW', 'GY', 'HT', 'HM', 'VA', 'HN', 'HK', 'HU', 'IS', 'IN', 'ID', 'IR', 'IQ', 'IE', 'IM', 'IL', 'IT', 'JM', 'JP', 'JE', 'JO', 'KZ', 'KE', 'KI', 'KP', 'KR', 'KW', 'KG', 'LA', 'LV', 'LB', 'LS', 'LR', 'LY', 'LI', 'LT', 'LU', 'MO', 'MK', 'MG', 'MW', 'MY', 'MV', 'ML', 'MT', 'MH', 'MQ', 'MR', 'MU', 'YT', 'MX', 'FM', 'MD', 'MC', 'MN', 'ME', 'MS', 'MA', 'MZ', 'MM', 'NA', 'NR', 'NP', 'NL', 'NC', 'NZ', 'NI', 'NE', 'NG', 'NU', 'NF', 'MP', 'NO', 'OM', 'PK', 'PW', 'PS', 'PA', 'PG', 'PY', 'PE', 'PH', 'PN', 'PL', 'PT', 'PR', 'QA', 'RE', 'RO', 'RU', 'RW', 'BL', 'SH', 'KN', 'LC', 'MF', 'PM', 'VC', 'WS', 'SM', 'ST', 'SA', 'SN', 'RS', 'SC', 'SL', 'SG', 'SX', 'SK', 'SI', 'SB', 'SO', 'ZA', 'GS', 'SS', 'ES', 'LK', 'SD', 'SR', 'SJ', 'SZ', 'SE', 'CH', 'SY', 'TW', 'TJ', 'TZ', 'TH', 'TL', 'TG', 'TK', 'TO', 'TT', 'TN', 'TR', 'TM', 'TC', 'TV', 'UG', 'UA', 'AE', 'US', 'UM', 'UY', 'UZ', 'VU', 'VE', 'VN', 'VG', 'VI', 'WF', 'EH', 'YE', 'ZM', 'ZW'\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <h4>Filter</h4>\r\n            <Form onSubmit={filterSubmitHandler}>\r\n                <Form.Group controlId='artist'>\r\n                    <Form.Label>Artist</Form.Label>\r\n                    <Form.Control\r\n                        as='select'\r\n                        value={countryCode}\r\n                        onChange={onChange}\r\n                    >\r\n                        <option label=\"Any\" value=\"\"></option>\r\n                        {country_codes.map((code) => (\r\n                            <option\r\n                                key={`${code}`}\r\n                                label={`${code}`}\r\n                                value={`${code}`}\r\n                            ></option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' className='btn-block'>\r\n                    Find Universities by Country Code\r\n                    </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterBox\r\n","import axios from \"axios\";\r\nimport { UNIVERSITY_LIST_REQUEST, UNIVERSITY_LIST_SUCCESS, UNIVERSITY_LIST_FAIL, UNIVERSITY_SEARCH_FAIL, UNIVERSITY_SEARCH_REQUEST, UNIVERSITY_SEARCH_SUCCESS, UNIVERSITY_FILTER_REQUEST, UNIVERSITY_FILTER_SUCCESS, UNIVERSITY_FILTER_FAIL, UNIVERSITY_CREATE_REQUEST, UNIVERSITY_CREATE_SUCCESS, UNIVERSITY_CREATE_FAIL, UNIVERSITY_DELETE_REQUEST, UNIVERSITY_DELETE_SUCCESS, UNIVERSITY_DELETE_FAIL, UNIVERSITY_UPDATE_REQUEST, UNIVERSITY_UPDATE_SUCCESS, UNIVERSITY_UPDATE_FAIL, UNIVERSITY_DETAILS_REQUEST, UNIVERSITY_DETAILS_SUCCESS, UNIVERSITY_DETAILS_FAIL } from \"../constants/universityConstants\";\r\n\r\nexport const listUniversities = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UNIVERSITY_LIST_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/universities`);\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNIVERSITY_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const searchUniversities = (keyword, start, limit) => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: UNIVERSITY_SEARCH_REQUEST });\r\n\r\n        const { data } = await axios.get(\r\n            `/api/universities/search/${keyword}?start=${start}&limit=${limit}`\r\n        );\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_SEARCH_SUCCESS,\r\n        });\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNIVERSITY_SEARCH_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const filterUniversities = (keyword = \"\", pageNumber = \"\") => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: UNIVERSITY_FILTER_REQUEST });\r\n\r\n        const { data } = await axios.get(\r\n            `/api/universities/search/filter/${keyword}`\r\n        );\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_FILTER_SUCCESS,\r\n        });\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNIVERSITY_FILTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const previousPage = (url) => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: UNIVERSITY_LIST_REQUEST });\r\n\r\n        console.log(url)\r\n        const { data } = await axios.get(`${url}`);\r\n\r\n        // dispatch({\r\n        //     type: UNIVERSITY_FILTER_SUCCESS,\r\n        // });\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNIVERSITY_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const nextPage = (url) => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: UNIVERSITY_LIST_REQUEST });\r\n        console.log(url)\r\n\r\n        const { data } = await axios.get(`${url}`);\r\n\r\n        // dispatch({\r\n        //     type: UNIVERSITY_FILTER_SUCCESS,\r\n        // });\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNIVERSITY_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createUniversity = (name, domain, webpage, alphaTwoCode, country, imgUrl, description) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UNIVERSITY_CREATE_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/universities`, { name, domain, web_page: webpage, alpha_two_code: alphaTwoCode, country, img_url: imgUrl, description }, config);\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNIVERSITY_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUniversity = (id, name, domain, webpage, alphaTwoCode, country, imgUrl, description) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UNIVERSITY_UPDATE_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/universities/${id}`, { name, domain, web_page: webpage, alpha_two_code: alphaTwoCode, country, img_url: imgUrl, description }, config);\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_UPDATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNIVERSITY_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUniversityDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UNIVERSITY_DETAILS_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/universities/${id}`);\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNIVERSITY_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUniversity = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UNIVERSITY_DELETE_REQUEST,\r\n        });\r\n\r\n        await axios.delete(`/api/universities/${id}`);\r\n\r\n        dispatch({\r\n            type: UNIVERSITY_DELETE_SUCCESS,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNIVERSITY_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n","import React from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteUniversity } from '../actions/universityActions';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UniversityCard = ({ university, }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteUniversityHandler = (id) => {\r\n        if (window.confirm(\"Are you sure\")) {\r\n            //DELETE university\r\n            dispatch(deleteUniversity(id));\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={university.img_url} className=\"card-img align-self-center\" alt={university.name} />\r\n                </div>\r\n                <div className=\"col-md-8  align-self-center\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href={university.web_page}>{university.name}\r\n                                <span className=\"float-right badge badge-success text-uppercase\">{university.alpha_two_code}</span></a>\r\n                        </h5>\r\n                        <span className=\"badge badge-primary mb-2 text-uppercase\">{university.country}</span>\r\n                        <p className=\"card-text\">\r\n                            {university.description}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link to={`/update/${university.id}`} className=\"btn btn-block btn-primary\">Edit</Link>\r\n                <button className=\"btn btn-block btn-danger\" onClick={() => { deleteUniversityHandler(university.id) }}>Delete</button>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UniversityCard\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n    // <div className='spinner-border' role='status'>\r\n    //   <span className='visually-hidden'>Loading...</span>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react'\r\nimport UniversityCard from './UniversityCard'\r\n\r\n\r\nimport Message from \"./Message\";\r\nimport Loader from \"./Loader\";\r\n\r\n\r\n\r\nconst UniversityList = ({ loading, searchLoading, filterLoading, error, searchError, filterError, universities }) => {\r\n    return (\r\n        <>\r\n            {loading || searchLoading || filterLoading ? (\r\n                <Loader />\r\n            ) : error || searchError || filterError ? (\r\n                <Message variant='danger'>{error || searchError || filterError}</Message>\r\n            ) : universities.length === 0 ? (<Message>\"No result(s) found\"</Message>) : (\r\n                universities.map((university, index) => (\r\n                    <>\r\n                        <UniversityCard key={index} university={university} />\r\n\r\n                    </>\r\n                ))\r\n\r\n            )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UniversityList\r\n","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ searchSubmitHandler, onChange, keyword }) => {\r\n    return (\r\n        <div class=\"card card-body mb-4\">\r\n            <h4 class=\"mb-3\">Search</h4>\r\n            <Form onSubmit={searchSubmitHandler}>\r\n                <Form.Control\r\n                    type='text'\r\n                    name='q'\r\n                    onChange={onChange}\r\n                    placeholder='Search by university name...'\r\n                    value={keyword}\r\n                />\r\n                <br />\r\n                <Button type='submit' variant='primary' className='btn-block'>\r\n                    Search\r\n                    </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, { useState } from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nconst Paginate = ({ pages, start, previous, next, paginatePreviousPage, paginateNextPage, keyword = '' }) => {\r\n    const [currentpage, setCurrentpage] = useState(start)\r\n\r\n\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {previous ? (<Pagination.Prev onClick={() => {\r\n                paginatePreviousPage()\r\n                setCurrentpage(currentpage - 1)\r\n            }} />) : (<Pagination.Prev disabled />)}\r\n            {/* {[...Array(pages).keys()].map(x => (\r\n\r\n                <Pagination.Item key={x} active={x + 1 === currentpage}>{x + 1}</Pagination.Item>\r\n            ))} */}\r\n            {next ? <Pagination.Next\r\n                onClick={() => {\r\n                    paginateNextPage()\r\n                    setCurrentpage(currentpage + 1)\r\n                }}\r\n            /> : <Pagination.Next disabled />}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\nimport FilterBox from '../components/FilterBox'\r\nimport UniversityList from '../components/UniversityList'\r\nimport { listUniversities, searchUniversities, filterUniversities, previousPage, nextPage, } from \"../actions/universityActions\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst HomeScreen = () => {\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [countryCode, setCountryCode] = useState(\"\");\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const universityList = useSelector((state) => state.universityList);\r\n    const { loading, error, start, limit, pages, previous, next, universities } = universityList;\r\n\r\n    const universitySearch = useSelector((state) => state.universitySearch);\r\n    const { loading: searchLoading, error: searchError } = universitySearch;\r\n\r\n    const universityFilter = useSelector((state) => state.universityFilter);\r\n    const { loading: filterLoading, error: filterError } = universityFilter;\r\n\r\n    const universityDelete = useSelector((state) => state.universityDelete);\r\n    const { loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete, } = universityDelete;\r\n\r\n    if (errorDelete) {\r\n        alert(\"Could not delete university. Try again\")\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listUniversities())\r\n    }, [dispatch, successDelete]);\r\n\r\n    const searchSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword === '') {\r\n            dispatch(listUniversities())\r\n        } else {\r\n            dispatch(searchUniversities(keyword.toLowerCase(), start, limit))\r\n        }\r\n    }\r\n    const filterSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (countryCode === '') {\r\n            dispatch(listUniversities())\r\n        } else {\r\n            dispatch(filterUniversities(countryCode))\r\n        }\r\n\r\n    }\r\n    const paginatePreviousPage = () => {\r\n        dispatch(previousPage(previous))\r\n    }\r\n\r\n    const paginateNextPage = () => {\r\n        dispatch(nextPage(next))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"my-5\">\r\n            <Row>\r\n                <Col md=\"4\">\r\n                    <SearchBox onChange={(e) => setKeyword(e.target.value)} searchSubmitHandler={searchSubmitHandler} keyword={keyword} />\r\n                    <FilterBox onChange={(e) => setCountryCode(e.target.value)} filterSubmitHandler={filterSubmitHandler} countryCode={countryCode} />\r\n                    <div className=\"my-3\">\r\n                        <Button className=\"btn-block\" onClick={() => {\r\n                            dispatch(listUniversities())\r\n                            setKeyword('')\r\n                            setCountryCode('')\r\n                        }}>Reset filters</Button>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col md=\"8\">\r\n                    <UniversityList loading={loading} searchLoading={searchLoading} error={error} universities={universities} searchError={searchError} filterLoading={filterLoading} filterError={filterError} start={start} pages={pages} loadingDelete={loadingDelete} errorDelete={errorDelete} />\r\n                    <Paginate start={start} pages={pages} previous={previous} next={next} paginatePreviousPage={paginatePreviousPage} paginateNextPage={paginateNextPage} />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { createUniversity } from \"../actions/universityActions\";\r\nimport { UNIVERSITY_CREATE_RESET } from '../constants/universityConstants';\r\n\r\nconst CreateScreen = ({ history }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [domain, setDomain] = useState(\"\");\r\n    const [webpage, setWebpage] = useState(\"\");\r\n    const [alphaTwoCode, setAlphaTwoCode] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const universityCreate = useSelector((state) => state.universityCreate);\r\n    const { loading, error, success } = universityCreate;\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            dispatch({ type: UNIVERSITY_CREATE_RESET });\r\n            history.push('/')\r\n        }\r\n    }, [dispatch, history, success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (name === '' || domain === '' || webpage === '' || alphaTwoCode === '' || country === '' || imgUrl === '' || description === '') {\r\n            setMessage(\"Fill in all fields\")\r\n        }\r\n        else if (alphaTwoCode.length > 2 || alphaTwoCode.length < 2) {\r\n            setMessage(\"Country code should be 2 characters\")\r\n        } else {\r\n            dispatch(createUniversity(name, domain, webpage, alphaTwoCode.toUpperCase(), country, imgUrl, description))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Create A University</h1>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            {loading && <Loader />}\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter University Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"6\" controlId='domain'>\r\n                        <Form.Label>Domain</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter university domain'\r\n                            value={domain}\r\n                            onChange={(e) => setDomain(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"6\" controlId='webpage'>\r\n                        <Form.Label>Web Page</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter university webpage'\r\n                            value={webpage}\r\n                            onChange={(e) => setWebpage(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"6\" controlId='alphaTwoCode'>\r\n                        <Form.Label>Country Code</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter university country code'\r\n                            value={alphaTwoCode}\r\n                            onChange={(e) => setAlphaTwoCode(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"6\" controlId='country'>\r\n                        <Form.Label>Country</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter university country'\r\n                            value={country}\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group controlId='imgUrl'>\r\n                    <Form.Label>Image Url</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Image URL'\r\n                        value={imgUrl}\r\n                        onChange={(e) => setImgUrl(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter description '\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <button type='submit' className='btn btn-primary'>\r\n                    Create\r\n                </button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default CreateScreen\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\"><i className=\"fas fa-laptop-code\"></i> Findd</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item text-white\">\r\n                            <Link className=\"nav-link\" to=\"/create\">Create University</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUniversityDetails, updateUniversity } from '../actions/universityActions';\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { UNIVERSITY_UPDATE_RESET } from \"../constants/universityConstants\";\r\n\r\nconst UpdateScreen = ({ match, history }) => {\r\n    const universityId = match.params.id;\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [domain, setDomain] = useState(\"\");\r\n    const [webpage, setWebpage] = useState(\"\");\r\n    const [alphaTwoCode, setAlphaTwoCode] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const universityDetails = useSelector((state) => state.universityDetails);\r\n    const { loading, error, university } = universityDetails;\r\n\r\n    const universityUpdate = useSelector((state) => state.universityUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = universityUpdate;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        if (successUpdate) {\r\n            dispatch({ type: UNIVERSITY_UPDATE_RESET });\r\n            history.push(\"/\");\r\n        }\r\n        if (!university.name || university.id !== universityId) {\r\n            dispatch(getUniversityDetails(universityId))\r\n            setName(university.name)\r\n            setDomain(university.domain)\r\n            setWebpage(university.web_page)\r\n            setAlphaTwoCode(university.alpha_two_code)\r\n            setCountry(university.country)\r\n            setImgUrl(university.img_url)\r\n            setDescription(university.description)\r\n        }\r\n    }, [dispatch, history, successUpdate, universityId, university.id, university.web_page, university.name, university.domain, university.alpha_two_code, university.country, university.img_url, university.description]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (name === '' || domain === '' || webpage === '' || alphaTwoCode === '' || country === '' || imgUrl === '' || description === '') {\r\n            setMessage(\"Fill in all fields\")\r\n        }\r\n        else if (alphaTwoCode.length > 2 || alphaTwoCode.length < 2) {\r\n            setMessage(\"Country code should be 2 characters\")\r\n        } else {\r\n            dispatch(updateUniversity(university.id, name, domain, webpage, alphaTwoCode.toUpperCase(), country, imgUrl, description))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { loading ? <Loader /> : (\r\n                <FormContainer>\r\n                    <h1>Update a University</h1>\r\n                    <Link className='btn btn-light my-3' to='/'>\r\n                        Go Back\r\n                    </Link>\r\n\r\n                    {loadingUpdate && <Loader />}\r\n                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter University Name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"6\" controlId='domain'>\r\n                                <Form.Label>Domain</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter university domain'\r\n                                    value={domain}\r\n                                    onChange={(e) => setDomain(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"6\" controlId='webpage'>\r\n                                <Form.Label>Web Page</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter university webpage'\r\n                                    value={webpage}\r\n                                    onChange={(e) => setWebpage(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"6\" controlId='alphaTwoCode'>\r\n                                <Form.Label>Country Code</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter university country code'\r\n                                    value={alphaTwoCode}\r\n                                    onChange={(e) => setAlphaTwoCode(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"6\" controlId='country'>\r\n                                <Form.Label>Country</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter university country'\r\n                                    value={country}\r\n                                    onChange={(e) => setCountry(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Group controlId='imgUrl'>\r\n                            <Form.Label>Image Url</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Image URL'\r\n                                value={imgUrl}\r\n                                onChange={(e) => setImgUrl(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter description '\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <button type='submit' className='btn btn-primary'>\r\n                            Update\r\n                </button>\r\n                    </Form>\r\n                </FormContainer>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateScreen\r\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from 'react-bootstrap'\nimport HomeScreen from './screens/HomeScreen'\nimport CreateScreen from './screens/CreateScreen'\n\nimport Header from './components/Header'\nimport UpdateScreen from \"./screens/UpdateScreen\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <Container>\n\n          {/* <Route path='/search/' component={HomeScreen} /> */}\n          <Route path='/update/:id' component={UpdateScreen} />\n          <Route path='/create' component={CreateScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n\n        </Container>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}